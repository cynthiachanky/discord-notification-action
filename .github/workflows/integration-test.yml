name: Integration Test

on:
  workflow_dispatch:
  workflow_call:

jobs:
  trigger-release:
    permissions:
      contents: write
    if: ${{ github.event_name == 'pull_request' || github.triggering_actor == github.repository_owner }}
    runs-on: ubuntu-latest
    steps:
      - name: Create the bot token
        id: bot
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ vars.ACTION_APP_ID }}
          private-key: ${{ secrets.ACTION_PRIVATE_KEY }}
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
      - name: Generate the tag name
        id: tag
        run: |
          if [[ ${{ github.event_name }} == pull_request ]]
          then
            TAG_NAME="action-test/pr/${{ github.event.pull_request.number }}"
          else
            TAG_NAME="action-test/manual/${{ github.ref_name }}"
          fi
          echo "tag_name=${TAG_NAME}" >> "${GITHUB_OUTPUT}"
      - name: Cleanup
        id: cleanup
        run: |
          ./entrypoint/utilities/extract-release.sh
          source release_meta
          if [[ -z ${release_id} || ${release_id} -gt 0 ]]
          then
            RELEASE_ID=${release_id} TAG_REF=${TAG_REF} ./entrypoint/utilities/cleanup-release.sh
            echo "Stale release was deleted."
          else
            echo "Stale release does not exist."
          fi
        env:
          GITHUB_TOKEN: ${{ github.token }}
          GITHUB_REPO: ${{ github.repository }}
          GITHUB_TAG: ${{ steps.tag.outputs.tag_name }}
          TAG_REF: "refs/tags/${{ steps.tag.outputs.tag_name }}"
      - name: Create a release
        id: release
        run: |
          RESPONSE=$(
            curl -s -L -X POST --oauth2-bearer ${{ env.TOKEN }} \
            -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" \
            --json '{"tag_name": "${{ steps.tag.outputs.tag_name }}", "target_commitish": "${{ github.sha }}", "name": "GitHub Action Test (${{ github.ref_name }})", "body": "## PLEASE IGNORE THIS RELEASE\nThis is a release to **test the GitHub Action**, which will be deleted once the test workflow completes successfully.", "prerelease": true}' \
            "https://api.github.com/repos/${{ github.repository }}/releases"
          )
          RELEASE_ID=$(echo -E ${RESPONSE} | jq -r ".id")
          if [[ -z ${RELEASE_ID} || ${RELEASE_ID} -gt 0 ]]
          then
            echo "Release: ${RELEASE_ID}"
            exit 0
          else
            echo "${RESPONSE}"
            exit 1
          fi
        env:
          TOKEN: ${{ steps.bot.outputs.token }}
