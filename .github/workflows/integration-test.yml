name: Integration Test

on:
  workflow_dispatch:

jobs:
  trigger:
    permissions:
      contents: write
    if: ${{ github.triggering_actor == github.repository_owner }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cleanup
        run: |
          ./entrypoint/utilities/extract-release.sh
          source release_meta
          if [[ -z ${release_id} || ${release_id} -gt 0 ]]
          then
            RELEASE_ID=${release_id} TAG_REF=${TAG_REF} ./entrypoint/utilities/cleanup-release.sh
            echo "Stale release was deleted."
          else
            echo "Stale release does not exist."
          fi
        env:
          GITHUB_TOKEN: ${{ github.token }}
          GITHUB_REPO: ${{ github.repository }}
          GITHUB_TAG: "action-test"
          TAG_REF: "refs/tags/action-test"
      - name: Create a release
        run: |
          RESPONSE=$(
            curl -s -L -X POST --oauth2-bearer ${{ secrets.ACTION_TEST_TOKEN }} \
            -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" \
            --json '{"tag_name": "action-test", "target_commitish": "${{ github.sha }}", "name": "GitHub Action Test", "body": "## PLEASE IGNORE THIS RELEASE\nThis is a release to **test the GitHub Action**, which will be deleted once the test workflow completes successfully.", "prerelease": true}' \
            "https://api.github.com/repos/${{ github.repository }}/releases"
          )
          RELEASE_ID=$(echo -E ${RESPONSE} | jq -r ".id")
          if [[ -z ${RELEASE_ID} || ${RELEASE_ID} -gt 0 ]]
          then
            echo "Release: ${RELEASE_ID}"
            exit 0
          else
            echo "${RESPONSE}"
            exit 1
          fi
