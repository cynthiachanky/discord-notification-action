name: Release

on:
  release:
    types: [ released ]

jobs:
  tag:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Create the bot token
        id: bot
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ vars.ACTION_APP_ID }}
          private-key: ${{ secrets.ACTION_PRIVATE_KEY }}
      - name: Retrieve the major version
        id: version
        run: |
          MAJOR_VERSION=$(echo ${{ github.ref_name }} | cut -d "." -f 1)
          echo "Using ${MAJOR_VERSION} as the major version"
          echo "major_version=${MAJOR_VERSION}" >> "${GITHUB_OUTPUT}"
      - name: Upsert the major version tag reference
        id: tag
        uses: octokit/request-action@v2.x
        with:
          route: PATCH /repos/{repository}/git/{reference}
          repository: ${{ github.repository }}
          reference: "refs/tags/${{ steps.version.outputs.major_version }}"
          sha: ${{ github.sha }}
          force: true
        env:
          GITHUB_TOKEN: ${{ steps.bot.outputs.token }}

  notify:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cynthiachanky/discord-notification-action@v1
        with:
          webhook_url: ${{ secrets.CHANGELOG_CHANNEL }}
          post_as: "action"
