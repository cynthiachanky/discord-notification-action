name: Merge

on:
  pull_request:
    types:
      - closed
    branches:
      - "main"

jobs:
  bump:
    if: ${{ github.event.pull_request.merged == true }}
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.release_version }}
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
        with:
          fetch-tags: true # unable to fetch the tags right now
      - name: Determine the release type
        id: type
        run: |
          if [[ ${{ contains(github.event.pull_request.labels.*.name, 'breaking change') }} == true ]]
          then
            RELEASE_TYPE="major"
          else
            if [[ ${{ contains(github.event.pull_request.labels.*.name, 'type: feature') }} == true || ${{ contains(github.event.pull_request.labels.*.name, 'type: enhancement') }} == true ]]
            then
              RELEASE_TYPE="minor"
            else
              RELEASE_TYPE="patch"
            fi
          fi
          echo "Realese a ${RELEASE_TYPE} version"
          echo "release_type=${RELEASE_TYPE}" >> "${GITHUB_OUTPUT}"
      - name: Generate the release version
        id: version
        run: |
          git fetch --tags # to resolve actions/checkout issue
          SEMVER_REGEX="^v([0-9]+)\.([0-9]+)\.([0-9]+)$"
          CURRENT_VERSION=$(git tag --list "v[0-9]*" --sort=-v:refname | grep -E ${SEMVER_REGEX} | head -n 1)
          if [[ ${CURRENT_VERSION} =~ ${SEMVER_REGEX} ]]
          then
            MAJOR="${BASH_REMATCH[1]}"
            MINOR="${BASH_REMATCH[2]}"
            PATCH="${BASH_REMATCH[3]}"
          else
            echo "Current version ${CURRENT_VERSION} is not a semantic version."
            exit 1
          fi
          case "${{ env.RELEASE_TYPE }}" in
            "major")
              ((++MAJOR));
              MINOR=0;
              PATCH=0;
              ;;
            "minor")
              ((++MINOR));
              PATCH=0;
              ;;
            "patch")
              ((++PATCH));
              ;;
            *)
              echo "Release type ${{ env.RELEASE_TYPE }} is not supported."
              exit 1
              ;;
          esac
          RELEASE_VERSION="v${MAJOR}.${MINOR}.${PATCH}"
          echo "Bump version from ${CURRENT_VERSION} to ${RELEASE_VERSION}"
          echo "release_version=${RELEASE_VERSION}" >> "${GITHUB_OUTPUT}"
        env:
          RELEASE_TYPE: ${{ steps.type.outputs.release_type }}

  draft:
    permissions:
      contents: write
    needs: [ bump ]
    runs-on: ubuntu-latest
    steps:
      - uses: octokit/request-action@v2.x
        with:
          route: POST /repos/{repository}/releases
          repository: ${{ github.repository }}
          tag_name: ${{ needs.bump.outputs.version }}
          target_commitish: ${{ github.sha }}
          draft: true
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ github.token }}
